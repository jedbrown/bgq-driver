//
# begin_generated_IBM_copyright_prolog                             
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
#  --------------------------------------------------------------- 
#                                                                  
# Licensed Materials - Property of IBM                             
# Blue Gene/Q                                                      
# (C) Copyright IBM Corp.  2010, 2012                              
# US Government Users Restricted Rights - Use, duplication or      
#   disclosure restricted by GSA ADP Schedule Contract with IBM    
#   Corp.                                                          
#                                                                  
# This software is available to you under the Eclipse Public       
# License (EPL).                                                   
#                                                                  
#  --------------------------------------------------------------- 
#                                                                  
# end_generated_IBM_copyright_prolog                               
// Parameter file for setting options we want to run with this
// for local testing...
//


// this controls the maximum number of cycles to run until a timeout.
Fusion.MaxTime=3800000;

//
// enable 1 core
//Stage1ResetDriver.CoreEnables=0xFFFF8000;
Stage1ResetDriver.CoreEnables=0x80000000;

///////////////////////////////////////////////////////////////////////////////
// Monitors
//////////////////////////////////////////////////////////////////////////////


#prefix IfarMonitor[00-17] {
  EnableDriver=true;
}
#prefix GprMonitor[00-17] {
  EnableDriver=true;
}


#prefix EratMonitor[00-17] {
  EnableDriver=true;
}

#prefix DcrMonitor {
  EnableDriver=true;
  TraceReq=true;
  TraceWrite=true;
  TraceRead=true;
  StopOnAbort=false;
}

#prefix A2L1pMonitor[00-17] {
  EnableDriver=true;
  TraceReq=true;
  TraceLoad=true;
  TraceStore=true;
  TraceLwarxAndStwcx=true;
  TraceInvalidate=true;

}
#prefix L1pSwMonitor[00-17] {
  EnableDriver=true;
  TraceReq=true;
  TraceLoad=true;
  TraceStore=true;
}

#prefix DevbusMonitor {
  EnableDriver=true;
  TraceReq=true;
  TraceStore=true;
  TraceLoad=true;
};

#prefix BedramMonitor {
  EnableDriver=false;
  TraceReq=true;
  TraceWrite=true;
  TraceRead=true;
  TraceAtomicOps=true;

};

#prefix BedramLoader {		
  TraceLoad=false;
  ValidateLoad=false;
  DumpSram=false;
  SuppressLoad=false;
};

#prefix L2Monitor[00-15] {
  EnableDriver=true;
  TraceStore=true;
  TraceLoad=true;
  TraceReq=true;
  TraceLwarxAndStwcx=true;
  TraceInvalidate=false;
};

#prefix L2DdrDriver[00-15] {
  TraceRead=false;
  TraceWrite=false;
  TraceReq=false;
  TraceArb=false;
  TraceMem=false;
};

#prefix A2InterruptMonitor[00-17] {
  EnableDriver=true;
  TraceInterrupt=true;		// trace all interrupts
  TraceEratMiss=true;		// trace only erat misses
  TraceSpecAttn=true;		// trace special attn high...
  StopOnInterrupt=false;	// stop on any interrupt
  StopOnFatalInt=false;		// stop on fatal interrupt
  StopOnEratMiss=false;		// stop on erat miss
  StopOnSpecAttn=false;		// stop if AC_AN_SPECIAL_ATTN goes high
}

